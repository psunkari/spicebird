/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Synovel Software code.
 *
 * The Initial Developer of the Original Code is
 *   Sivakrishna Edpuganti <sivakrishna@synovel.com>
 * Portions created by the Initial Developer are Copyright (C) 2007
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
/* -*- Mode: idl; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
#include "nsISupports.idl"

interface nsIArray;

/**
 * csITimeZones
 *
 * An interface to query timezone information & conversions.
 */

[scriptable, uuid(9eafd822-ec87-47b4-b085-f2b99db7fa16)]
interface csITimezones : nsISupports
{
    readonly attribute string      currentTimezoneId;

    void getAllTimezoneIds(out unsigned long length, 
                           [retval, array, size_is(length)] out string timezoneIds);

    void getDefaultTimezoneIds(out unsigned long length, 
                               [retval, array, size_is(length)] out string timezoneIds);
    void setDefaultTimezoneIds(in PRUint32 length, 
                               [array, size_is(length)] in string timezoneIds);

    void getInTimezone(in string iDatetime, in string timezoneId, 
                       [retval] out string oDatetime);

    // Returns offset in milliseconds from UTC 
    void getTimezoneOffset(in string timezoneId, 
                           [retval] out long offset);
};
