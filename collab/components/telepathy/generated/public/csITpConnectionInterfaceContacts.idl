/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Spicebird code.
 *
 * The Initial Developer of the Original Code is
 *   Synovel Software Technologies
 * Portions created by the Initial Developer are Copyright (C) 2008
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Prasad Sunkari <prasad@synovel.com> (Original Author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/*
 * Code in this file is generated using a computer program.
 * Please refer to the corresponding telepathy spec for any help in using the
 * code here.  You may also feel free to contact the original developer for
 * any related help.
 */


#include "nsISupports.idl"
#include "nsIVariant.idl"
#include "nsIArray.idl"


%{C++
#include "glib/gtypes.h"
%}
native gpointer(gpointer);



/*
 * Some of the attributes of a single contact.
 */
[scriptable, uuid(8e5c4221-5e27-45e4-b1bf-6f607ffca9cb)]
interface csITpSingleContactAttributesMap : nsISupports
{
  /* The name of the attribute */
  readonly attribute AUTF8String name;
  /* The value of the attribute */
  readonly attribute nsIVariant value;
};

/*
 * Mapping returned by
 */
[scriptable, uuid(47fd5566-0f28-4ce8-8194-8727ff7bb099)]
interface csITpContactAttributesMap : nsISupports
{
  /* A contact */
  readonly attribute PRUint32 contact;
  /* Attributes of that contact */
  readonly attribute nsIArray attributes;
};

[scriptable, uuid(1e06b010-cf7e-46c4-bc1c-a11b93ed0095)]
interface csITpConnectionInterfaceContactsContactAttributeInterfacesCB : nsISupports
{
  void getPropertyContactAttributeInterfacesError(in ACString aErrorDomain, in PRUint32 aErrorCode, in ACString aErrorDesc);
  void getPropertyContactAttributeInterfacesDone(in PRUint32 aContactAttributeInterfacesCount, [array, size_is(aContactAttributeInterfacesCount)] in string aContactAttributeInterfaces);
};

[scriptable, uuid(2ec1928d-fc46-44a1-9b3e-2200c1b49342)]
interface csITpConnectionInterfaceContactsGetContactAttributesCB : nsISupports
{
  void onGetContactAttributesError(in ACString aErrorDomain, in PRUint32 aErrorCode, in ACString aErrorDesc);
  void onGetContactAttributesDone(in nsIArray aAttributes);
};



[scriptable, uuid(3c5a2b36-154b-4c6e-a4af-af27ed2d1bd0)]
interface csITpConnectionInterfaceContacts : nsISupports
{
  /* A list of D-Bus interfaces for which */
  void getPropertyContactAttributeInterfaces(in csITpConnectionInterfaceContactsContactAttributeInterfacesCB cb);

  void callGetContactAttributes(in PRUint32 aHandlesCount, [array, size_is(aHandlesCount)] in PRUint32 aHandles, in PRUint32 aInterfacesCount, [array, size_is(aInterfacesCount)] in string aInterfaces, in PRBool aHold, in csITpConnectionInterfaceContactsGetContactAttributesCB cb);

};