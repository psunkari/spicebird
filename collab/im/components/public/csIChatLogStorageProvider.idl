/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Spicebird code.
 *
 * The Initial Developer of the Original Code is
 * Synovel Software Technologies
 * Portions created by the Initial Developer are Copyright (C) 2009
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Siva Edpuganti <sivakrishna@synovel.com> (Original Author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "csIChatLogDataTypes.idl"

[scriptable, uuid(21cf658d-bca5-47af-91a8-50a6d5c6d9ae)]
interface csIChatLogStorageProvider : nsISupports
{
  readonly attribute AString name;
  readonly attribute AString protocols;
  readonly attribute boolean isReadOnly;
  readonly attribute boolean isSearchable;
  readonly attribute boolean isServerStorage;

  void startSession(in AString aId, in AString aAccount, in AString aAddress);
  void endSession(in AString aId);
  void newChatMessage(in AString aId, in csIChatMessage aChatMessage);

  // Search for all chat logs with the searchParams (user/text)
  // create csIChatLog instance for each matched chat
  void searchChatLogs(in unsigned long aSearchParamsCount, 
         [array, size_is(aSearchParamsCount)] in csIChatLogSearchParams aSearchParamsList,
         out unsigned long aCount, 
         [array, size_is(aCount), retval] out csIChatLog aChatLogs);

  void deleteChatLog(in AString aId);
};

